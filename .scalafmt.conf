maxColumn=120

align=none
//x match { // true for case arrows
//  case 2  => 22
//  case 22 => 222
//}
//
//def foo(
//a: Int, // true for defn site open paren
//b: String
//): Int
//foo(
//a: Int, // true for call site open paren
//b: String
//): Int

newlines.alwaysBeforeTopLevelStatements=true
//// newlines.alwaysBeforeTopLevelStatements = false
//import org.scalafmt
//package P {
//  object O {
//    val x1 = 1
//    val x2 = 2
//    def A = "A"
//    def B = "B"
//  }
//}
//
//// newlines.alwaysBeforeTopLevelStatements = true
//import org.scalafmt
//
//package P {
//
//  object O {
//    val x1 = 1
//    val x2 = 2
//
//    def A = "A"
//
//    def B = "B"
//  }
//}

newlines.sometimesBeforeColonInMethodReturnType=false
//// Column limit                                                     |
//// newlines.sometimesBeforeColonInMethodReturnType = true
//implicit def validatedInstances[E](implicit E: Semigroup[E])
//: Traverse[Validated[E, ?]] with ApplicativeError[Validated[E, ?], E] = 2
//
//// newlines.sometimesBeforeColonInMethodReturnType = false
//implicit def validatedInstances[E](implicit E: Semigroup[E]): Traverse[
//  Validated[E, ?]] with ApplicativeError[Validated[E, ?], E] = 2

newlines.penalizeSingleSelectMultiArgList=true
//// newlines.penalizeSingleSelectMultiArgList = true
//logger.elem(a,
//b,
//c)
//
//// newlines.penalizeSingleSelectMultiArgList = false
//logger
//.elem(a, b, c)

newlines.alwaysBeforeMultilineDef=false
newlines.alwaysBeforeCurlyBraceLambdaParams = true

rewrite.rules=[RedundantParens,SortImports]

//verticalMultiline.newlineAfterOpenParen=true
//since 1.6

//verticalMultiline.newlineBeforeImplicitKW=true
//since 1.6

# Only format files tracked by git.
project.git=true

style=IntelliJ